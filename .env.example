# PhiloGraph Tier 0 Environment Variables Example
# Copy this file to .env and fill in the values.
# DO NOT commit the actual .env file to version control.

# --- Database (PostgreSQL + pgvector) ---
# Used by db_layer.py and potentially Alembic
DB_HOST=localhost
DB_PORT=5432
DB_USER=philograph_user
DB_PASSWORD=your_secure_password
DB_NAME=philograph_db

# --- Backend API (FastAPI/Uvicorn) ---
# Used by the API server itself
BACKEND_HOST=0.0.0.0
BACKEND_PORT=8000 # Default FastAPI/Uvicorn port

# --- LiteLLM Proxy ---
# URL for the PhiloGraph backend to call the LiteLLM proxy
# Assumes LiteLLM is running locally via Docker Compose
LITELLM_HOST=litellm-proxy # Service name in docker-compose.yml
LITELLM_PORT=4000
LITELLM_PROXY_URL=http://${LITELLM_HOST}:${LITELLM_PORT}

# API Key for LiteLLM Proxy (if configured in LiteLLM)
# This is the key the PhiloGraph backend uses to authenticate *to the proxy*.
# It can be a "virtual key" defined in LiteLLM's config.
LITELLM_API_KEY=your_litellm_virtual_key

# Internal model name used by PhiloGraph, mapped in LiteLLM config
EMBEDDING_MODEL_NAME=philo-embed

# --- Google Cloud Vertex AI (Used by LiteLLM Proxy) ---
# These are needed by the LiteLLM Proxy container to call Vertex AI
# Path to the GCP service account key file (mount this into the LiteLLM container)
GOOGLE_APPLICATION_CREDENTIALS=/path/to/your/gcp-key.json
VERTEX_AI_PROJECT_ID=your-gcp-project-id
VERTEX_AI_LOCATION=us-central1 # Or your preferred region

# --- Text Processing ---
# Base directory for source documents to be ingested
SOURCE_FILE_DIR=./data/source_documents # Example path relative to project root

# Target chunk size for semchunk
TARGET_CHUNK_SIZE=512 # Example value

# Batch size for sending chunks to embedding model via LiteLLM
EMBEDDING_BATCH_SIZE=32 # Example value

# Embedding dimension (must match pgvector schema and LiteLLM config)
TARGET_EMBEDDING_DIMENSION=768 # Recommended, based on ADR 004

# Optional URLs if GROBID/AnyStyle run as separate services
# GROBID_API_URL=http://grobid:8070 # Example if running GROBID container named 'grobid'
# ANYSTYLE_API_URL=http://anystyle:4567 # Example if running AnyStyle container named 'anystyle'

# --- Search ---
# Default number of search results
SEARCH_TOP_K=10

# --- Text Acquisition ---
# Name of the zlibrary-mcp server (as registered with the MCP client/runner)
ZLIBRARY_MCP_SERVER_NAME=zlibrary-mcp

# --- Logging ---
LOG_LEVEL=INFO # e.g., DEBUG, INFO, WARNING, ERROR